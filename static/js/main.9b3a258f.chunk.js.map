{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","Fragment","map","user","i","Components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","searchfield","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","Components_SearchBox","Components_Scroll","Components_ErrorBoundry","Components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Containers_App"],"mappings":"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","file":"static/js/main.9b3a258f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id,name,email}) =>{\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n            <img alt ='robots' src={`https://robohash.org/${id}`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//only able to return one element with 'default'\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots })=>{\r\n    return(\r\n    <>\r\n    {\r\n      robots.map((user,i) => {\r\n        return (\r\n        <Card \r\n        key = {i} \r\n        id = {robots[i].id} \r\n        name = {robots[i].name} \r\n        email = {robots[i].email}/>\r\n        );\r\n    })\r\n    }\r\n    </>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) =>{\r\n    return(\r\n        <div className = 'pa2'>\r\n        <input \r\n        className = 'pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='seacrh robots'\r\n        onChange = {searchChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height : '800px'}} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState( { hasError: true } );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users =>this.setState({ robots: users }));   \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n        <h1 className = 'tc'>Loading</h1> :\r\n       (\r\n        <div className ='tc'>\r\n            <h1 className = 'f2'>RoboFriends ver1.1</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                    <CardList robots = {filteredRobots}/>\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n        </div>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\n//testing\r\n//Testing Again"],"sourceRoot":""}